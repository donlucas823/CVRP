D:\Tool\VisualStudio\2022\Professional\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets(517,5): warning MSB8028: 中间目录(x64\Debug\)包含从另一个项目(CVRP.vcxproj)共享的文件。   这会导致错误的清除和重新生成行为。
  cvrp.cpp
  cvrp_v2.cpp
D:\Project\Gurobi_Test\CVRP\cvrp_v2.cpp(117,39): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
D:\Project\Gurobi_Test\CVRP\cvrp_v2.cpp(123,34): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
D:\Project\Gurobi_Test\CVRP\cvrp_v2.cpp(233,14): warning C4244: “初始化”: 从“double”转换到“int”，可能丢失数据
D:\Tool\VisualStudio\2022\Professional\VC\Tools\MSVC\14.35.32215\include\utility(200,61): warning C4244: “初始化”: 从“_Ty”转换到“_Ty2”，可能丢失数据
          with
          [
              _Ty=unsigned __int64
          ]
          and
          [
              _Ty2=int
          ]
D:\Tool\VisualStudio\2022\Professional\VC\Tools\MSVC\14.35.32215\include\xmemory(673): message : 查看对正在编译的函数 模板 实例化“std::pair<const int,int>::pair<int,unsigned __int64,0>(std::pair<int,unsigned __int64> &&) noexcept”的引用
D:\Tool\VisualStudio\2022\Professional\VC\Tools\MSVC\14.35.32215\include\xmemory(680,47): message : 查看对正在编译的函数 模板 实例化“std::pair<const int,int>::pair<int,unsigned __int64,0>(std::pair<int,unsigned __int64> &&) noexcept”的引用
D:\Tool\VisualStudio\2022\Professional\VC\Tools\MSVC\14.35.32215\include\xtree(806): message : 查看对正在编译的函数 模板 实例化“void std::_Default_allocator_traits<_Alloc>::construct<_Ty,std::pair<int,unsigned __int64>>(_Alloc &,_Objty *const ,std::pair<int,unsigned __int64> &&)”的引用
          with
          [
              _Alloc=std::allocator<std::_Tree_node<std::pair<const int,int>,std::_Default_allocator_traits<std::allocator<std::pair<const int,int>>>::void_pointer>>,
              _Ty=std::pair<const int,int>,
              _Objty=std::pair<const int,int>
          ]
D:\Tool\VisualStudio\2022\Professional\VC\Tools\MSVC\14.35.32215\include\xtree(807,34): message : 查看对正在编译的函数 模板 实例化“void std::_Default_allocator_traits<_Alloc>::construct<_Ty,std::pair<int,unsigned __int64>>(_Alloc &,_Objty *const ,std::pair<int,unsigned __int64> &&)”的引用
          with
          [
              _Alloc=std::allocator<std::_Tree_node<std::pair<const int,int>,std::_Default_allocator_traits<std::allocator<std::pair<const int,int>>>::void_pointer>>,
              _Ty=std::pair<const int,int>,
              _Objty=std::pair<const int,int>
          ]
D:\Tool\VisualStudio\2022\Professional\VC\Tools\MSVC\14.35.32215\include\xtree(994): message : 查看对正在编译的函数 模板 实例化“std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<const int,int>,std::_Default_allocator_traits<_Alloc>::void_pointer>>>::_Tree_temp_node<_Ty>(_Alnode &,std::_Tree_node<std::pair<const int,int>,std::_Default_allocator_traits<_Alloc>::void_pointer> *,_Ty &&)”的引用
          with
          [
              _Alloc=std::allocator<std::pair<const int,int>>,
              _Ty=std::pair<int,unsigned __int64>,
              _Alnode=std::allocator<std::_Tree_node<std::pair<const int,int>,std::_Default_allocator_traits<std::allocator<std::pair<const int,int>>>::void_pointer>>
          ]
D:\Tool\VisualStudio\2022\Professional\VC\Tools\MSVC\14.35.32215\include\xtree(1007,23): message : 查看对正在编译的函数 模板 实例化“std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<const int,int>,std::_Default_allocator_traits<_Alloc>::void_pointer>>>::_Tree_temp_node<_Ty>(_Alnode &,std::_Tree_node<std::pair<const int,int>,std::_Default_allocator_traits<_Alloc>::void_pointer> *,_Ty &&)”的引用
          with
          [
              _Alloc=std::allocator<std::pair<const int,int>>,
              _Ty=std::pair<int,unsigned __int64>,
              _Alnode=std::allocator<std::_Tree_node<std::pair<const int,int>,std::_Default_allocator_traits<std::allocator<std::pair<const int,int>>>::void_pointer>>
          ]
D:\Tool\VisualStudio\2022\Professional\VC\Tools\MSVC\14.35.32215\include\xtree(1031): message : 查看对正在编译的函数 模板 实例化“std::pair<std::_Tree_node<std::pair<const int,int>,std::_Default_allocator_traits<_Alloc>::void_pointer> *,bool> std::_Tree<std::_Tmap_traits<_Kty,_Ty,_Pr,_Alloc,false>>::_Emplace<std::pair<int,unsigned __int64>>(std::pair<int,unsigned __int64> &&)”的引用
          with
          [
              _Alloc=std::allocator<std::pair<const int,int>>,
              _Kty=int,
              _Ty=int,
              _Pr=myCompareInt
          ]
D:\Tool\VisualStudio\2022\Professional\VC\Tools\MSVC\14.35.32215\include\xtree(1032,30): message : 查看对正在编译的函数 模板 实例化“std::pair<std::_Tree_node<std::pair<const int,int>,std::_Default_allocator_traits<_Alloc>::void_pointer> *,bool> std::_Tree<std::_Tmap_traits<_Kty,_Ty,_Pr,_Alloc,false>>::_Emplace<std::pair<int,unsigned __int64>>(std::pair<int,unsigned __int64> &&)”的引用
          with
          [
              _Alloc=std::allocator<std::pair<const int,int>>,
              _Kty=int,
              _Ty=int,
              _Pr=myCompareInt
          ]
D:\Tool\VisualStudio\2022\Professional\VC\Tools\MSVC\14.35.32215\include\map(185,1): message : 查看对正在编译的函数 模板 实例化“std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int,int>>>>,bool> std::_Tree<std::_Tmap_traits<_Kty,_Ty,_Pr,_Alloc,false>>::emplace<std::pair<int,unsigned __int64>>(std::pair<int,unsigned __int64> &&)”的引用
          with
          [
              _Kty=int,
              _Ty=int,
              _Pr=myCompareInt,
              _Alloc=std::allocator<std::pair<const int,int>>
          ]
D:\Tool\VisualStudio\2022\Professional\VC\Tools\MSVC\14.35.32215\include\map(185,9): message : 查看对正在编译的函数 模板 实例化“std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int,int>>>>,bool> std::_Tree<std::_Tmap_traits<_Kty,_Ty,_Pr,_Alloc,false>>::emplace<std::pair<int,unsigned __int64>>(std::pair<int,unsigned __int64> &&)”的引用
          with
          [
              _Kty=int,
              _Ty=int,
              _Pr=myCompareInt,
              _Alloc=std::allocator<std::pair<const int,int>>
          ]
D:\Project\Gurobi_Test\CVRP\cvrp_v2.cpp(236): message : 查看对正在编译的函数 模板 实例化“std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int,int>>>>,bool> std::map<int,int,myCompareInt,std::allocator<std::pair<const int,int>>>::insert<std::pair<int,unsigned __int64>,0>(_Valty &&)”的引用
          with
          [
              _Valty=std::pair<int,unsigned __int64>
          ]
D:\Project\Gurobi_Test\CVRP\cvrp_v2.cpp(236,21): message : 查看对正在编译的函数 模板 实例化“std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const int,int>>>>,bool> std::map<int,int,myCompareInt,std::allocator<std::pair<const int,int>>>::insert<std::pair<int,unsigned __int64>,0>(_Valty &&)”的引用
          with
          [
              _Valty=std::pair<int,unsigned __int64>
          ]
  modelCompetition.cpp
  正在生成代码...
  CVRP.vcxproj -> D:\Project\Gurobi_Test\CVRP\x64\Debug\Model.exe
